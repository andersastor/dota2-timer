name: 'release-on-push'
on:
  push:
    branches: [ main ]

jobs:

  test-and-release:
    permissions:
      contents: write
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest] # App is only supported on windows

    runs-on: ${{ matrix.platform }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          
      - name: setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install frontend dependencies
        run: pnpm install

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: run backend lint and tests
        working-directory: ./src-tauri
        run: |
          cargo clippy
          cargo test
      
      - name: run frontend lint
        run: pnpm lint

      - name: run frontend tests with coverage
        run: pnpm coverage

      - name: run playwright tests
        run: pnpm exec playwright test

      - name: upload playwright test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Build and release the app
        id: release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APTABASE_TOKEN: ${{ secrets.APTABASE_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Upload runnable .exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.releaseUploadUrl }}
          asset_path: D:\a\dota2-timer\dota2-timer\src-tauri\target\release\dota2-timer.exe
          asset_name: dota2-timer.exe
